[{"D:\\bestenlist\\React js Project\\leaderboard\\src\\index.js":"1","D:\\bestenlist\\React js Project\\leaderboard\\src\\App.js":"2","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Admin\\Login.js":"3","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\User\\Login.js":"4","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\User\\Home.js":"5","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Admin\\Home.js":"6","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\DB\\firebase.js":"7","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Login\\LoginCard.js":"8","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Admin\\Quiz.js":"9","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\User\\ProgressBar.js":"10"},{"size":220,"mtime":1608440420788,"results":"11","hashOfConfig":"12"},{"size":1277,"mtime":1609314798918,"results":"13","hashOfConfig":"12"},{"size":15639,"mtime":1608910816809,"results":"14","hashOfConfig":"12"},{"size":16339,"mtime":1608910737385,"results":"15","hashOfConfig":"12"},{"size":24671,"mtime":1609314851320,"results":"16","hashOfConfig":"12"},{"size":16953,"mtime":1609062796359,"results":"17","hashOfConfig":"12"},{"size":625,"mtime":1609147296503,"results":"18","hashOfConfig":"12"},{"size":32891,"mtime":1610895204600,"results":"19","hashOfConfig":"12"},{"size":48307,"mtime":1609062807435,"results":"20","hashOfConfig":"12"},{"size":2254,"mtime":1609314851012,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"y2q8k1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\bestenlist\\React js Project\\leaderboard\\src\\index.js",[],["46","47"],"D:\\bestenlist\\React js Project\\leaderboard\\src\\App.js",[],"D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Admin\\Login.js",[],"D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\User\\Login.js",[],"D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\User\\Home.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"import { Redirect } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { auth, db } from '../DB/firebase';\r\nimport Loader from 'react-loader-spinner';\r\nimport ProgressBar from './ProgressBar';\r\nimport { store } from \"react-notifications-component\";\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport \"animate.css\";\r\n\r\nexport default function Home() {\r\n  const [loggedIn, setloggedIn] = useState();\r\n  const [quizquestions, setquizquestions] = useState([{ question: \"Loading...\" }]);\r\n  const [questionno, setquestionno] = useState(0);\r\n  const [score, setscore] = useState(0);\r\n  const [k, setk] = useState(0);\r\n  const [h, seth] = useState(0);\r\n  const [result, setresult] = useState([]);\r\n  const [result1, setresult1] = useState([]);\r\n  const [scorecard, setscorecard] = useState(false);\r\n  const [startquiz, setstartquiz] = useState(false);\r\n  const [checked, setchecked] = useState({ option1: false, option2: false, option3: false, option4: false });\r\n  const [checked1, setchecked1] = useState({ option1: false, option2: false, option3: false, option4: false });\r\n  const [activequizId, setactivequizId] = useState([{ quizid: \"Loading...\", quiztitle: \"Loading...\" }]);\r\n  const [quizid, setquizid] = useState({ quizid: \"Loading...\", quiztitle: \"Loading...\" });\r\n  const usertoken = sessionStorage.getItem(\"usertoken\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [showleaderBoard, setshowleaderBoard] = useState(false);\r\n\r\n  console.log(result);\r\n  useEffect(() => {\r\n\r\n    db.collection('Admin/' + sessionStorage.getItem('adminid') + '/quizes').onSnapshot((s) => {\r\n      var array = []; \r\n      s.forEach((doc) => {\r\n        var Data = doc.data();\r\n        if (Data.active === true) {\r\n          array.push({ quizid: doc.id, quiztitle: Data.quiztitle, duration: Data.duration })\r\n        }\r\n      })\r\n      if (array.length === 0) {\r\n        setactivequizId([{ quizid: \"No Active Quizes\", quiztitle: \"No Active Quizes\", duration: \"No Active Quizes\" }]);\r\n      }\r\n      else {\r\n        setactivequizId(array);\r\n      }\r\n    })\r\n  }, []);\r\n  useEffect(() => {\r\n    if (quizid.quiztitle !== \"Loading...\") {\r\n      db.collection('Users/' + sessionStorage.getItem('usernameid') + '/quizes').doc(quizid.quizid).set(\r\n        {\r\n          quizid: quizid.quizid,\r\n          quiztitle: quizid.quiztitle,\r\n          score: score,\r\n          totalquestions: quizquestions.length\r\n        }\r\n      )\r\n      db.collection('Admin/' + sessionStorage.getItem('adminid') + '/Users/' + sessionStorage.getItem('usernameid') + '/quizes').doc(quizid.quizid).set(\r\n        {\r\n          quizid: quizid.quizid,\r\n          quiztitle: quizid.quiztitle,\r\n          score: score,\r\n          totalquestions: quizquestions.length\r\n        }\r\n      )\r\n    }\r\n  }, [score]);\r\n  useEffect(() => {\r\n    setProgress((score / quizquestions.length) * 100);\r\n    if (quizid.quiztitle !== \"Loading...\") {\r\n      db.collection('Users/' + sessionStorage.getItem('usernameid') + '/quizes').doc(quizid.quizid).set(\r\n        {\r\n          quizid: quizid.quizid,\r\n          quiztitle: quizid.quiztitle,\r\n          score: score,\r\n          time: h,\r\n          totalquestions: quizquestions.length\r\n        }\r\n      )\r\n      db.collection('Admin/' + sessionStorage.getItem('adminid') + '/Users/' + sessionStorage.getItem('usernameid') + '/quizes').doc(quizid.quizid).set(\r\n        {\r\n          quizid: quizid.quizid,\r\n          quiztitle: quizid.quiztitle,\r\n          score: score,\r\n          time: h,\r\n          totalquestions: quizquestions.length\r\n        }\r\n      )\r\n    }\r\n\r\n  }, [score]);\r\n  useEffect(() => {\r\n\r\n    if (quizid.quizid !== \"Loading...\") {\r\n      console.log(quizid.quizid);\r\n\r\n      console.log(result1);\r\n      db.collection('Admin/' + sessionStorage.getItem('adminid') + '/Users').onSnapshot((s) => {\r\n        var array = [];\r\n        s.forEach((doc) => {\r\n          db.collection('Admin/' + sessionStorage.getItem('adminid') + '/Users/' + doc.id + '/quizes').doc(quizid.quizid).onSnapshot((s) => {\r\n            if (s.exists !== false) {\r\n              if (s.data().score !== undefined && s.data().time !== undefined) {\r\n                array.push([s.data().score, doc.id, s.data().time]);\r\n              }\r\n              // console.log(s)\r\n              // console.log(s.data(),doc.id)\r\n            }\r\n          });\r\n        });\r\n        setresult1(array)\r\n      });\r\n    }\r\n\r\n  }, [score]);\r\n  useEffect(() => {\r\n    setresult(result1.sort(function (a, b) {\r\n      if (a[0] > b[0]) return -1;\r\n      else if (a[0] < b[0]) return 1;\r\n      else if (a[2] < b[2]) return -1;\r\n      else if (a[2] > b[2]) return 1;\r\n      return 0;\r\n    }));\r\n  }, [result1]);\r\n  var loggedStatus = () => {\r\n\r\n    if (usertoken === null) {\r\n      setloggedIn(false);\r\n    } else {\r\n      setloggedIn(true);\r\n    }\r\n  }\r\n  window.onload = loggedStatus;\r\n  if (loggedIn === false) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"navbar-head\">\r\n        <div className=\"navbar\">\r\n          <div className=\"brand\">LeaderBoards</div>\r\n          <div className=\"nav-list\">\r\n            <h6 onClick={function () {\r\n              sessionStorage.removeItem(\"usertoken\");\r\n              setloggedIn(false)\r\n            }}>Logout</h6>\r\n            <h6 onClick={function () {\r\n              window.location.reload(true);\r\n            }}>Home</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='main' style={{ marginTop: '100px' }}>\r\n        {!scorecard ?\r\n          <div>\r\n            {!startquiz ?\r\n              <div>\r\n                <div className=\"heading\">Quizes List</div>\r\n\r\n                <div className=\"titlebox-div\">\r\n\r\n                  <div className=\"titlebox \">\r\n                    {\r\n                      activequizId.map((i, k) => {\r\n                        return (\r\n\r\n                          <div className=\"title\" key={i, k}>\r\n                            {(i.quiztitle === \"No Active Quizes\" || i.quiztitle === \"Loading...\") ? <h6>{i.quiztitle}</h6> :\r\n                              <>\r\n                                <h6>{(((i.quiztitle).length > 20) ? ((i.quiztitle).slice(0, 20).concat(\"...\")) : (i.quiztitle))}  </h6>\r\n\r\n                                <img onClick={function () {\r\n                                  db.collection('Users/' + sessionStorage.getItem(\"usernameid\") + '/quizes').doc(i.quizid).get().then((s) => {\r\n                                    if (s.empty === true || s.exists === false) {\r\n\r\n                                      var array1 = [];\r\n                                      db.collection('Admin/' + sessionStorage.getItem(\"adminid\") + '/quizes/' + i.quizid + '/questions').get().then(snapshot => {\r\n                                        snapshot.forEach(doc => {\r\n\r\n                                          array1.push(doc.data());\r\n\r\n                                        });\r\n\r\n                                        setquizquestions(array1);\r\n                                        setquizid({ quizid: i.quizid, quiztitle: i.quiztitle });\r\n\r\n\r\n                                      });\r\n                                      setstartquiz(true)\r\n                                    }\r\n                                    else {\r\n\r\n                                      store.addNotification({\r\n                                        title: \"Error!\",\r\n                                        message: \"You Have Already Responded to this Quiz\",\r\n                                        type: \"danger\",\r\n                                        container: \"top-right\",\r\n                                        insert: \"top\",\r\n                                        animationIn: [\"animated\", \"fadeIn\"],\r\n                                        animationOut: [\"animated\", \"fadeOut\"],\r\n                                        dismiss: {\r\n                                          duration: 3000,\r\n                                          showIcon: true\r\n                                        },\r\n                                        width: 280,\r\n                                      })\r\n                                    }\r\n                                  });\r\n                                }\r\n\r\n\r\n                                }\r\n\r\n                                  src=\"https://img.icons8.com/ios-filled/25/000000/runner-starting-the-race.png\" alt='' />\r\n                              </>\r\n                            }\r\n\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              :\r\n\r\n              <div>\r\n\r\n                <div className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"75vh\" }}>\r\n                  <div className=\"w-100 quizcard\">\r\n                    <div style={{ background: \"rgba(0,0,0,0.35)\", boxShadow: \"10px 14px 16px rgba(0,0,0,0.5)\", padding: \"20px\" }} >\r\n\r\n                      <div>\r\n                        {((quizquestions[questionno].question) === \"Loading...\") ?\r\n                          <div className='d-flex align-items-center justify-content-center'>\r\n                            <Loader type=\"Oval\" color=\"aqua\" height=\"50\" width=\"50\" />\r\n                          </div>\r\n                          :\r\n                          <div onLoad={() => { setk(Date.now()) }}>\r\n                            {/* <div><Countdown date={Date.now() + ((activequizId[0].duration)*60000)} autoStart={false} renderer={start()} /></div> */}\r\n                            <div onLoad={() => {\r\n                              if (questionno === 0) {\r\n                                db.collection('Users/' + sessionStorage.getItem('usernameid') + '/quizes').doc(quizid.quizid).set(\r\n                                  {\r\n                                    quizid: quizid.quizid,\r\n                                    quiztitle: quizid.quiztitle,\r\n                                    score: score,\r\n                                    totalquestions: quizquestions.length\r\n                                  }\r\n                                )\r\n                                db.collection('Admin/' + sessionStorage.getItem('adminid') + '/Users/' + sessionStorage.getItem('usernameid') + '/quizes').doc(quizid.quizid).set(\r\n                                  {\r\n                                    quizid: quizid.quizid,\r\n                                    quiztitle: quizid.quiztitle,\r\n                                    score: score,\r\n                                    totalquestions: quizquestions.length\r\n                                  }\r\n                                )\r\n                              }\r\n                            }} className=\"question\">\r\n                              <h6>{questionno + 1} . {quizquestions[questionno].question}</h6>\r\n                            </div>\r\n\r\n                            <div className=\"option\">\r\n                              {!(quizquestions[questionno].noofanswers > 1) ?\r\n                                <div>\r\n                                  <h6 onClick={() => { setchecked({ option1: true, option2: false, option3: false, option4: false }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"radio\" name=\"answer\" checked={checked.option1} onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option1}</h6>\r\n                                  <h6 onClick={() => { setchecked({ option1: false, option2: true, option3: false, option4: false }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"radio\" name=\"answer\" checked={checked.option2} onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option2}</h6>\r\n                                  <h6 onClick={() => { setchecked({ option1: false, option2: false, option3: true, option4: false }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"radio\" name=\"answer\" checked={checked.option3} onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option3}</h6>\r\n                                  <h6 onClick={() => { setchecked({ option1: false, option2: false, option3: false, option4: true }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"radio\" name=\"answer\" checked={checked.option4} onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option4}</h6>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                  <h6 onClick={() => { setchecked1({ ...checked1, option1: ((checked1.option1) ? false : true) }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"checkbox\" name=\"answer\" checked={checked1.option1} value=\"option1\" onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option1}</h6>\r\n                                  <h6 onClick={() => { setchecked1({ ...checked1, option2: ((checked1.option2) ? false : true) }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"checkbox\" name=\"answer\" checked={checked1.option2} value=\"option1\" onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option2}</h6>\r\n                                  <h6 onClick={() => { setchecked1({ ...checked1, option3: ((checked1.option3) ? false : true) }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"checkbox\" name=\"answer\" checked={checked1.option3} value=\"option1\" onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option3}</h6>\r\n                                  <h6 onClick={() => { setchecked1({ ...checked1, option4: ((checked1.option4) ? false : true) }) }}>\r\n                                    &nbsp;&nbsp;<input type=\"checkbox\" name=\"answer\" checked={checked1.option4} value=\"option1\" onChange={(e) => { }} />&nbsp;&nbsp;{quizquestions[questionno].option4}</h6>\r\n                                </div>\r\n                              }\r\n                            </div>\r\n                            <div style={{ display: \"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\" }}>\r\n                              <img alt='' src=\"https://img.icons8.com/material/45/000000/circled-chevron-right--v1.png\" onClick={() => {\r\n                                if (checked.option1 === true || checked.option2 === true || checked.option3 === true || checked.option4 === true\r\n                                  || checked1.option1 === true || checked1.option2 === true || checked1.option3 === true || checked1.option4 === true) {\r\n                                  if (quizquestions[questionno].noofanswers > 1) {\r\n\r\n                                    if (checked1.option1 === (quizquestions[questionno].correctanswer.option1)\r\n                                      && checked1.option2 === (quizquestions[questionno].correctanswer.option2)\r\n                                      && checked1.option3 === (quizquestions[questionno].correctanswer.option3)\r\n                                      && checked1.option4 === (quizquestions[questionno].correctanswer.option4)\r\n                                    ) {\r\n                                      setscore(score + 1);\r\n                                      seth((Date.now() - k) / 60000)\r\n                                      setProgress((score / quizquestions.length) * 100);\r\n                                    }\r\n\r\n                                  }\r\n                                  else {\r\n                                    if (checked.option1 === (quizquestions[questionno].correctanswer.option1)\r\n                                      && checked.option2 === (quizquestions[questionno].correctanswer.option2)\r\n                                      && checked.option3 === (quizquestions[questionno].correctanswer.option3)\r\n                                      && checked.option4 === (quizquestions[questionno].correctanswer.option4)\r\n                                    ) {\r\n                                      seth((Date.now() - k) / 60000)\r\n                                      setscore(score + 1);\r\n                                      setProgress((score / quizquestions.length) * 100);\r\n                                    }\r\n                                  }\r\n                                  if (quizquestions.length - 1 > questionno) {\r\n                                    setquestionno(questionno + 1);\r\n                                    setchecked1({ option1: false, option2: false, option3: false, option4: false });\r\n                                    setchecked({ option1: false, option2: false, option3: false, option4: false })\r\n\r\n                                  }\r\n                                  else {\r\n                                    setTimeout(()=>{\r\n                                    console.log(score,quizquestions.length,progress)\r\n                                    setstartquiz(false);\r\n                                    setscorecard(true);\r\n                                  },2000)\r\n                                  }\r\n                                }\r\n                                else {\r\n                                  store.addNotification({\r\n                                    title: \"Error!\",\r\n                                    message: \"Please Select Any of the Following Option\",\r\n                                    type: \"danger\",\r\n                                    container: \"top-right\",\r\n                                    insert: \"top\",\r\n                                    animationIn: [\"animated\", \"fadeIn\"],\r\n                                    animationOut: [\"animated\", \"fadeOut\"],\r\n                                    dismiss: {\r\n                                      duration: 3000,\r\n                                      showIcon: true\r\n                                    },\r\n                                    width: 280,\r\n                                  })\r\n                                }\r\n                              }} />\r\n                            </div>\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            }\r\n          </div>\r\n          :\r\n          <div>\r\n            {!showleaderBoard ?\r\n              <div className=\"d-flex align-items-center justify-content-center\">\r\n\r\n                <div className=\"app\">\r\n                  <div className=\"app-header\">\r\n                    <h1>{quizid.quiztitle}</h1>\r\n                    <br></br>\r\n                    <ProgressBar\r\n                      progress={progress}\r\n                      size={window.innerWidth > 1000 ? 350 : window.innerWidth < 500 ? 250 : 300}\r\n                      strokeWidth={20}\r\n                      circleOneStroke='#cad0da'\r\n                      circleTwoStroke={progress < 20 ? \"red\" : \"#00ff00\"}\r\n                    />\r\n                  </div>\r\n                  <br></br>\r\n                  <h5 style={{\r\n                    color: \"#009999\", cursor: \"pointer\"\r\n                  }} onClick={() => {\r\n                    setresult(result.sort(function (a, b) {\r\n                      if (a[0] > b[0]) return -1;\r\n                      else if (a[0] < b[0]) return 1;\r\n                      else if (a[2] < b[2]) return -1;\r\n                      else if (a[2] > b[2]) return 1;\r\n                      return 0;\r\n                    })); setTimeout(() => { setshowleaderBoard(true) }, 800)\r\n                  }}>See Your LeaderBoard</h5>\r\n                </div>\r\n              </div>\r\n              :\r\n              <div className='d-flex align-items-center justify-content-center'>\r\n                <div className=\"leaderboard-div\">\r\n                  <h3 style={{ color: \"white\", marginBottom: \"1%\" }}>LeaderBoard</h3>\r\n                  <div className=\"leaderboarddiv\">\r\n                    <div className='d-flex align-items-center justify-content-center'>\r\n                      <img src=\"https://img.icons8.com/color/48/000000/firework-explosion.png\" />\r\n                      <img style={{ position: \"relative\" }} src=\"https://img.icons8.com/emoji/100/000000/trophy-emoji.png\" />\r\n                      <img src=\"https://img.icons8.com/color/48/000000/firework-explosion.png\" />\r\n                      <h5 style={{ position: \"absolute\", marginTop: \"-43px\", background: \"white\", borderRadius: \"100%\", cursor: \"default\" }}>&nbsp;\r\n                {result.map((i, k) => { return <>{sessionStorage.getItem('usernameid') === i[1] ? k + 1 : null}</> })}\r\n                &nbsp;</h5>\r\n                    </div><br></br>\r\n                    <div>\r\n                      <div>\r\n                        {result.map((i, k) => {\r\n                          return <>{sessionStorage.getItem('usernameid') === i[1] ?\r\n                            <div key={k} className=\"leaderboard\" style={{ background: \"#0099ff\" }}>\r\n                              <span>&nbsp;&nbsp;#{k + 1}&nbsp;&nbsp; {i[1]}</span>\r\n                              <span className=\"leaderboard-score1\">\r\n                                <img style={{ marginBottom: \"1px\" }}\r\n                                  src=\"https://img.icons8.com/material-outlined/13/ffffff/timer.png\" />\r\n                                {i[2].toFixed(2)} &nbsp;&nbsp;</span>\r\n                              <span className=\"leaderboard-score2\">\r\n                                <img src=\"https://img.icons8.com/android/13/ffffff/speedometer.png\" />\r\n                                         &nbsp;{i[0] + \"/\" + quizquestions.length}&nbsp;&nbsp;</span>\r\n                            </div>\r\n                            : null}</>\r\n                        })}\r\n\r\n                      </div>\r\n                      {\r\n                        result.map((i, k) => {\r\n\r\n                          return (<>\r\n                            {k === 0 ?\r\n                              sessionStorage.getItem('usernameid') === i[1] ?\r\n                                      null\r\n                                      :\r\n                              <div key={k} className=\"leaderboard\">\r\n                                <span>&nbsp;&nbsp;#1&nbsp;&nbsp; {i[1]}</span>\r\n                                <span className=\"leaderboard-score1\">\r\n                                  <img style={{ marginBottom: \"1px\" }}\r\n                                    src=\"https://img.icons8.com/material-outlined/13/ffffff/timer.png\" />\r\n                                  {(i[2] !== undefined) ? (i[2]).toString().slice(0, 4) : i[2]} &nbsp;&nbsp;</span>\r\n                                <span className=\"leaderboard-score2\">\r\n                                  <img src=\"https://img.icons8.com/android/13/ffffff/speedometer.png\" />\r\n                                  &nbsp;{i[0] + \"/\" + quizquestions.length}&nbsp;&nbsp;</span>\r\n                              </div>\r\n                              :\r\n                              <>\r\n                                {i[1] === (i - 1)[1] ?\r\n                                  null\r\n                                  :\r\n                                  <>\r\n                                    {sessionStorage.getItem('usernameid') === i[1] ?\r\n                                      null\r\n                                      :\r\n                                      <div key={k} className=\"leaderboard\">\r\n                                        <span>&nbsp;&nbsp;#{k + 1}&nbsp;&nbsp; {i[1]}</span>\r\n                                        <span className=\"leaderboard-score1\">\r\n                                          <img style={{ marginBottom: \"1px\" }}\r\n                                            src=\"https://img.icons8.com/material-outlined/13/ffffff/timer.png\" />\r\n                                          {(i[2] !== undefined) ? (i[2]).toString().slice(0, 4) : i[2]} &nbsp;&nbsp;</span>\r\n                                        <span className=\"leaderboard-score2\">\r\n                                          <img src=\"https://img.icons8.com/android/13/ffffff/speedometer.png\" />\r\n                                         &nbsp;{i[0] + \"/\" + quizquestions.length}&nbsp;&nbsp;</span>\r\n                                      </div>\r\n                                    }\r\n                                  </>\r\n                                }\r\n                              </>\r\n                            }\r\n                          </>)\r\n                        })\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n\r\n            }\r\n          </div>\r\n        }\r\n      </div >\r\n    </div >\r\n  );\r\n}\r\n","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Admin\\Home.js",["62","63","64","65","66","67","68","69","70"],"import React, { useState, useEffect } from 'react';\r\nimport './styles.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { auth, db } from '../DB/firebase';\r\nimport { store } from \"react-notifications-component\";\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport \"animate.css\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  const [loggedIn, setloggedIn] = useState();\r\n  const [home, sethome] = useState(true);\r\n  const [loader, setloader] = useState(false);\r\n  const [Leaderboard, setLeaderboard] = useState(false);\r\n  const [quizId, setquizId] = useState([{ quizid: \"Loading...\", quiztitle: \"Loading...\" }]);\r\n  const [QuizId, setQuizId] = useState({ quizid: \"Loading...\", quiztitle: \"Loading...\" });\r\n  const [UsersData, setUsersData] = useState(\"Loading...\");\r\n  const [h, seth] = useState('');\r\n  const [username, setusername] = useState('');\r\n  const [usernumber, setusernumber] = useState('');\r\n  const [score, setscore] = useState('');\r\n  const [totalq, settotalq] = useState('');\r\n  const [time, settime] = useState('');\r\n\r\n  const admintoken = sessionStorage.getItem(\"admintoken\");\r\n  useEffect(() => {\r\n   \r\n    if (UsersData !== \"Loading...\") {\r\n      setTimeout(() => { sethome(false) }, 1000);\r\n    }\r\n    else {\r\n      sethome(true)\r\n    }\r\n  }, [UsersData]);\r\n\r\n  var loggedStatus = () => {\r\n    if (admintoken === null) {\r\n      setloggedIn(false);\r\n    } else {\r\n      setloggedIn(true);\r\n    }\r\n  }\r\n  window.onload = loggedStatus;\r\n  useEffect(() => {\r\n    db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/quizes').onSnapshot((s) => {\r\n      var array = [];\r\n      s.forEach((doc) => {\r\n        var Data = doc.data();\r\n        array.push({ quizid: doc.id, quiztitle: Data.quiztitle })\r\n      })\r\n      if (array.length === 0) {\r\n        setquizId([{ quizid: \"No Available Quizes\", quiztitle: \"No Available Quizes\" }]);\r\n      }\r\n      else {\r\n        setquizId(array);\r\n      }\r\n    })\r\n  }, []);\r\n  if (loggedIn === false) {\r\n    return <Redirect to=\"/admin\" />\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"navbar-head\">\r\n        <div className=\"navbar\">\r\n          <div className=\"brand\">LeaderBoards</div>\r\n          <div className=\"nav-list\">\r\n            <h6 onClick={function () {\r\n              sessionStorage.removeItem(\"admintoken\");\r\n              setloggedIn(false)\r\n            }}>Logout</h6>\r\n            {home?\r\n            <NavLink to={\"/admin/quiz\"} className=\"link\">Quizes</NavLink>\r\n            :\r\n            <h6 onClick={()=>{window.location.reload(true)}}>Home</h6>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main\">\r\n        {home ?\r\n          <div>\r\n            <div className=\"heading\">Quizes List</div>\r\n\r\n            <div className=\"titlebox-div\">\r\n\r\n              <div className=\"titlebox \">\r\n                {\r\n                  quizId.map((i, k) => {\r\n                    return (\r\n\r\n                      <div className=\"title\" key={i, k}>\r\n                        {(i.quiztitle === \"No Available Quizes\" || i.quiztitle === \"Loading...\") ? <h6>{i.quiztitle}</h6> :\r\n                          <>\r\n                            <h6>{(((i.quiztitle).length > 20) ? ((i.quiztitle).slice(0, 20).concat(\"...\")) : (i.quiztitle))}  </h6>\r\n                           {!loader?\r\n                            <img onClick={function () {\r\n                              setQuizId({ quizid: i.quizid, quiztitle: i.quiztitle });\r\n                              db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users').get().then(snapshot => {\r\n                                var array = [];\r\n                                snapshot.forEach(doc => {\r\n                                  db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users/' + doc.id + '/quizes').get().then(s => {\r\n                                    s.forEach(doc1 => {\r\n                                      if (doc1.id === i.quizid) {\r\n                                        // console.log(doc1.data())\r\n                                        array.push([doc.id, doc.data().number, doc1.data().score, doc1.data().totalquestions, doc1.data().time, doc1.id])\r\n\r\n                                      }\r\n                                    })\r\n                                  })\r\n                                })\r\n                                setUsersData(array)\r\n                                setloader(true)\r\n                              })\r\n                            }}\r\n                              src=\"https://img.icons8.com/ios-filled/25/000000/visible.png\" />\r\n                              :\r\n                              <Loader type=\"Oval\" color=\"black\" height=\"25\" width=\"30\" style={{float:\"right\",marginTop:\"-30px\"}} />\r\n                           }\r\n                          </>\r\n                        }\r\n\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <div style={{ marginTop: \"100px\" }}>\r\n            <div className='d-flex align-items-center justify-content-center'>\r\n              <div className=\"leaderboard-div\">\r\n                <h3 style={{ color: \"white\", marginBottom: \"3%\" }} >{!Leaderboard?\"Users\":\"LeaderBoard\"}</h3>\r\n                <Table size=\"sm\" borderless responsive>\r\n                  <thead>\r\n                    <tr style={{ background: \"rgb(251, 255, 0)\" }}>\r\n                    {Leaderboard?<th>Rank</th>:null}\r\n                      <th>Name</th>\r\n                      <th>Number</th>\r\n                      <th>Score</th>\r\n                      <th>time</th>\r\n                      <th>Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {UsersData.map((i, k) => {\r\n                      if (i !== \"empty\" || i !== null) {\r\n                        return (\r\n                          <tr key={k} className=\"leaderboard\">\r\n                          {Leaderboard?<td>#{k+1}</td>:null}\r\n                            <td>{i[0]}</td>\r\n                            <Popup trigger={<td>{i[1]}</td>} position=\"bottom\">\r\n                              <div>\r\n                                <input id=\"a4\" type=\"text\" placeholder={i[1]} onChange={e => { seth(e.target.value) }}></input>\r\n                                <button onClick={() => {\r\n                                  document.getElementById('a4').value = '';\r\n                                  db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users').doc(i[0]).update(\r\n                                    {\r\n                                      number: h\r\n                                    }\r\n                                  )\r\n                                  db.collection('Users').doc(i[0]).update(\r\n                                    {\r\n                                      number: h\r\n                                    }\r\n                                  )\r\n                                  i[1] = h;\r\n                                  ; seth('')\r\n                                }}>update</button>\r\n                              </div>\r\n                            </Popup>\r\n                            <Popup trigger={<td>{i[2] + \"/\" + i[3]}</td>} position=\"bottom\">\r\n                              <div>\r\n                                <input id=\"a3\" type=\"text\" placeholder={i[2] + \"/\" + i[3]} onChange={e => { seth(e.target.value) }}></input>\r\n                                <button onClick={() => {\r\n                                  document.getElementById('a3').value = '';\r\n                                  db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users/' + i[0] + '/quizes').doc(i[5]).update(\r\n                                    {\r\n                                      score: h\r\n                                    }\r\n                                  )\r\n                                  db.collection('Users/' + i[0] + '/quizes').doc(i[5]).update(\r\n                                    {\r\n                                      score: h\r\n                                    }\r\n                                  )\r\n                                  i[2] = h;\r\n                                  ; seth('')\r\n                                }}>update score</button>\r\n                                <button onClick={() => {\r\n                                  document.getElementById('a3').value = '';\r\n                                  db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users/' + i[0] + '/quizes').doc(i[5]).update(\r\n                                    {\r\n                                      totalquestions: h\r\n                                    }\r\n                                  )\r\n                                  db.collection('Users/' + i[0] + '/quizes').doc(i[5]).update(\r\n                                    {\r\n                                      totalquestions: h\r\n                                    }\r\n                                  )\r\n                                  i[3] = h;\r\n                                  ; seth('')\r\n                                }}>update totalquestions</button>\r\n                              </div>\r\n                            </Popup>\r\n                            <Popup trigger={<td>{(i[4] !== undefined) ? (i[4]).toString().slice(0, 4) : i[4]}</td>} position=\"bottom\">\r\n                              <div>\r\n                                <input id=\"a3\" type=\"text\" placeholder={i[4]} onChange={e => { seth(e.target.value) }}></input>\r\n                                <button onClick={() => {\r\n                                  document.getElementById('a3').value = '';\r\n                                  db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users/' + i[0] + '/quizes').doc(i[5]).update(\r\n                                    {\r\n                                      time: h\r\n                                    }\r\n                                  )\r\n                                  db.collection('Users/' + i[0] + '/quizes').doc(i[5]).update(\r\n                                    {\r\n                                      time: h\r\n                                    }\r\n                                  )\r\n                                  i[4] = h;\r\n                                  ; seth('')\r\n                                }}>update</button>\r\n                              </div>\r\n                            </Popup>\r\n                            <td>\r\n                              <img\r\n                                onClick={() => {\r\n                                  db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users/' + i[0] + '/quizes').doc(i[5]).delete();\r\n                                  var array1 = [];\r\n                                  UsersData.map((q, p) => {\r\n                                    if (k === p) {\r\n                                      return null\r\n                                    }\r\n                                    else {\r\n                                      array1.push(q);\r\n                                    }\r\n                                    setUsersData(array1);\r\n                                  })\r\n\r\n                                }}\r\n                                src=\"https://img.icons8.com/material/24/ffffff/delete-forever.png\" />\r\n                            </td>\r\n                          </tr>\r\n                        )\r\n                      }\r\n                    })}\r\n                  </tbody>\r\n                  \r\n                </Table>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n            {!Leaderboard?\r\n            <img style={{position:\"fixed\",bottom:\"14%\",right:\"4%\",width:\"40px\",height:\"50px\"}}\r\n          onClick={()=>{\r\n            setUsersData(UsersData.sort((function (a, b) {\r\n        if (a[2] > b[2]) return -1;\r\n        else if (a[2] < b[2]) return 1;\r\n        else if (a[4] < b[4]) return -1;\r\n        else if (a[4] > b[4]) return 1;\r\n        return 0;\r\n      })));(setLeaderboard(true))\r\n      console.log(UsersData)\r\n      }}\r\n      src=\"https://img.icons8.com/color/100/000000/leaderboard.png\"/>:\r\n      <img style={{position:\"fixed\",bottom:\"14%\",right:\"4%\",width:\"40px\",height:\"50px\"}}\r\n      onClick={()=>{\r\n        (setLeaderboard(false))\r\n      }}\r\n       src=\"https://img.icons8.com/dusk/48/000000/user-male.png\"/>\r\n            }\r\n            </div>\r\n            <div className=\"newicon\">\r\n\r\n              <Popup trigger={<img src=\"https://img.icons8.com/fluent/64/000000/add-user-male.png\" />} position=\"top right\">\r\n                <div>\r\n                  <input type=\"text\" id=\"addnew\" style={{ marginBottom: \"10px\" }} placeholder=\"username\" onChange={(e) => { setusername(e.target.value) }} />\r\n                  <input type=\"text\" id=\"addnew1\" style={{ marginBottom: \"10px\" }} placeholder=\"number with country code\" onChange={(e) => { setusernumber(e.target.value) }} />\r\n                  <input type=\"text\" id=\"addnew2\" style={{ marginBottom: \"10px\" }} placeholder=\"score\" onChange={(e) => { setscore(e.target.value) }} />\r\n                  <input type=\"text\" id=\"addnew3\" style={{ marginBottom: \"10px\" }} placeholder=\"total questions\" onChange={(e) => { settotalq(e.target.value) }} />\r\n                  <input type=\"text\" id=\"addnew4\" style={{ marginBottom: \"10px\" }} placeholder=\"time taken\" onChange={(e) => { settime(e.target.value) }} />\r\n                  <Button onClick={() => {\r\n                    if (username !== '' && usernumber !== '' && score !== '' && totalq !== '' && time !== '') {\r\n                      document.getElementById('addnew').value = '';\r\n                      document.getElementById('addnew1').value = '';\r\n                      document.getElementById('addnew2').value = '';\r\n                      document.getElementById('addnew3').value = '';\r\n                      document.getElementById('addnew4').value = '';\r\n                      db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users').doc(username).set(\r\n                        {\r\n                          name: username,\r\n                          number: usernumber\r\n                        }\r\n                      )\r\n                      db.collection('Users').doc(username).set(\r\n                        {\r\n                          name: username,\r\n                          number: usernumber\r\n                        }\r\n                      )\r\n                      db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/Users/' + username + '/quizes').doc(QuizId.quizid).set(\r\n                        {\r\n                          quiztitle: QuizId.quiztitle,\r\n                          quizid: QuizId.quizid,\r\n                          score: score,\r\n                          time: time,\r\n                          totalquestions: totalq\r\n                        }\r\n                      )\r\n                      db.collection('Users/' + username + '/quizes').doc(QuizId.quizid).set(\r\n                        {\r\n                          quiztitle: QuizId.quiztitle,\r\n                          quizid: QuizId.quizid,\r\n                          score: score,\r\n                          time: time,\r\n                          totalquestions: totalq\r\n                        }\r\n                      )\r\n                      setUsersData([...UsersData, [username, usernumber, score, totalq, time]]);\r\n                      console.log(UsersData);\r\n                      setusername('')\r\n                      setusernumber('')\r\n                      setscore('')\r\n                      settotalq('')\r\n                      settime('')\r\n                    }\r\n                    else {\r\n                      store.addNotification({\r\n                        title: \"Error!\",\r\n                        message: \"Any Field Should Not Be Empty\",\r\n                        type: \"danger\",\r\n                        container: \"bottom-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeOut\"],\r\n                        dismiss: {\r\n                          duration: 3000,\r\n                          showIcon: true\r\n                        },\r\n                        width: 280,\r\n                      })\r\n                    }\r\n                  }}\r\n                  >Add User</Button>\r\n                </div>\r\n\r\n              </Popup>\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n        <div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\DB\\firebase.js",[],"D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Login\\LoginCard.js",["71","72","73","74","75"],"D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\Admin\\Quiz.js",["76","77","78","79","80","81","82","83","84","85","86","87"],"import React, { useState, useEffect } from 'react';\r\nimport { auth, db } from '../DB/firebase';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { store } from \"react-notifications-component\";\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport \"animate.css\"\r\nimport './styles.css'\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nexport default function Quiz() {\r\n    const [quizid, setquizid] = useState(false);\r\n    const [loggedIn, setloggedIn] = useState();\r\n    const [quizquestions, setquizquestions] = useState(false);\r\n    const [questionscard, setquestionscard] = useState(true);\r\n    const [quizTitle, setquizTitle] = useState('');\r\n    const [quizId, setquizId] = useState('');\r\n    const [h, seth] = useState('hello');\r\n    const [question, setquestion] = useState('');\r\n    const [noofanswers, setnoofanswers] = useState(0);\r\n    const [option1, setoption1] = useState('');\r\n    const [checked, setchecked] = useState({ option1: false, option2: false, option3: false, option4: false });\r\n    const [option, setoption] = useState({ option1: false, option2: false, option3: false, option4: false });\r\n    const [option2, setoption2] = useState('');\r\n    const [option3, setoption3] = useState('');\r\n    const [option4, setoption4] = useState('');\r\n    const [quizlist, setquizlist] = useState([{ question: \"Loading...\" }]);\r\n    const [quiztitles, setquiztitles] = useState([{ quiztitle: \"Loading...\", quizid: \"Loading...\" }]);\r\n    const [reset, setreset] = useState(false);\r\n    const [loader, setloader] = useState('false');\r\n    const [titlecheck, settitlecheck] = useState('notchecked');\r\n\r\n    useEffect(() => {\r\n        var d = new Date();\r\n        var date = d.getDate();\r\n        var month = d.getMonth() + 1;\r\n        var year = d.getFullYear();\r\n        var hours = d.getHours();\r\n        var mins = d.getMinutes();\r\n        var seconds = d.getSeconds();\r\n        var quizIds = date + \"\" + month + \"\" + year + \"\" + hours + \"\" + mins + \"\" + seconds;\r\n        setquizId(quizIds);\r\n    }, []);\r\n    useEffect(() => {\r\n        db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes').onSnapshot(snapshot => {\r\n            var array = [];\r\n            if (!snapshot.empty) {\r\n                snapshot.forEach(doc => {\r\n                    var Data = doc.data();\r\n                    array.push({ quiztitle: Data.quiztitle, quizid: (doc.id), active: Data.active });\r\n                });\r\n                setquiztitles(array);\r\n            }\r\n            else {\r\n                setquiztitles([{ quiztitle: \"You Not Created Any Quiz\", quizid: \"You Not Created Any Quiz\" }])\r\n            }\r\n        });\r\n    }, []);\r\n    var questionCard = () => {\r\n        db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes').doc(quizId).set(\r\n            {\r\n                quiztitle: quizTitle,\r\n\r\n            }\r\n        )\r\n        setTimeout(() => { setquestionscard(false); }, 2000);\r\n    }\r\n    var addQuestions = () => {\r\n        db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes/' + quizId + '/questions').add(\r\n            {\r\n                question: question,\r\n                option1: option1,\r\n                option2: option2,\r\n                option3: option3,\r\n                option4: option4,\r\n                noofanswers: noofanswers,\r\n                correctanswer: checked\r\n            }\r\n        ).then(setquestion(''), setoption1(''), setoption2(''), setoption3(''), setoption4(''), setnoofanswers(0),\r\n            setchecked({ option1: false, option2: false, option3: false, option4: false }))\r\n    }\r\n    var post = () => {\r\n        setloader('posting');\r\n        setTimeout(() => { window.location.reload(true) }, 1300);\r\n    }\r\n    const admintoken = sessionStorage.getItem(\"admintoken\");\r\n    var loggedStatus = () => {\r\n        if (admintoken === null) {\r\n            setloggedIn(false);\r\n        } else {\r\n            setloggedIn(true);\r\n        }\r\n    }\r\n    window.onload = loggedStatus;\r\n    if (loggedIn === false) {\r\n        return <Redirect to=\"/admin\" />\r\n    }\r\n    function hello(e) {\r\n        console.log(\"hello\");\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"navbar-head\">\r\n                <div className=\"navbar\">\r\n                    <div className=\"brand\">LeaderBoards</div>\r\n                    <div className=\"nav-list\">\r\n                        <h6 onClick={function () {\r\n                            sessionStorage.removeItem(\"admintoken\");\r\n                            setloggedIn(false)\r\n                        }}>Logout</h6>\r\n                        {!quizquestions && questionscard && !quizid ?\r\n                            <NavLink to={\"/admin/home\"} className=\"link\">Users</NavLink>\r\n                            :\r\n                            <h6 onClick={() => { window.location.reload(true) }}>Home</h6>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {!quizquestions ?\r\n                    <div>\r\n                        {questionscard ?\r\n                            <div>\r\n                                {!quizid ?\r\n                                    <div>\r\n                                        <div className=\"heading\">Quizes List</div>\r\n                                        <div className=\"titlebox-div\">\r\n\r\n                                            <div className=\"titlebox \">\r\n\r\n                                                {\r\n                                                    quiztitles.map((i, k) => {\r\n                                                        return (\r\n\r\n                                                            <div className=\"title\" key={i, k}>\r\n                                                                {(i.quiztitle === \"Loading...\" || i.quiztitle === \"You Not Created Any Quiz\") ? <h6>{i.quiztitle}</h6> :\r\n                                                                    <>\r\n                                                                        <h6 onClick={function () {\r\n                                                                            var array1 = [];\r\n                                                                            db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes/' + i.quizid + '/questions').get().then(snapshot => {\r\n                                                                                snapshot.forEach(doc => {\r\n\r\n                                                                                    array1.push([doc.data(), i.quizid, doc.id]);\r\n\r\n                                                                                });\r\n\r\n                                                                                setquizlist(array1);\r\n\r\n                                                                            });\r\n                                                                            setquizquestions(true);\r\n                                                                        }\r\n\r\n                                                                        }> {(((i.quiztitle).length > 20) ? ((i.quiztitle).slice(0, 20).concat(\"...\")) : (i.quiztitle))}  </h6>\r\n                                                                        <div className='titleimgdiv'>\r\n                                                                            <img onClick={() => {\r\n\r\n                                                                                db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes/' + i.quizid + '/questions').get().then((s) => {\r\n                                                                                    s.forEach((doc) => {\r\n                                                                                        db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes/' + i.quizid + '/questions').doc(doc.id).delete()\r\n                                                                                    });\r\n\r\n                                                                                });\r\n                                                                                db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes').doc(i.quizid).delete();\r\n                                                                            }} src=\"https://img.icons8.com/material/25/000000/delete-forever--v1.png\" alt=\"\" />\r\n                                                                            {(i.active !== true) ?\r\n                                                                                <img onClick={() => {\r\n\r\n                                                                                    db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes').doc(i.quizid).update(\r\n                                                                                        {\r\n                                                                                            active: true\r\n                                                                                        }\r\n                                                                                    )\r\n                                                                                    // setTimeout(()=>{setactive('true'+(i.quizid))},1000)\r\n\r\n                                                                                }}\r\n                                                                                    src=\"https://img.icons8.com/fluent-systems-filled/22/000000/play.png\" />\r\n                                                                                : <img onClick={() => {\r\n                                                                                    db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes').doc(i.quizid).update(\r\n                                                                                        {\r\n                                                                                            active: false\r\n                                                                                        }\r\n                                                                                    )\r\n                                                                                    // setTimeout(()=>{setactive('false'+(i.quizid))},1000)\r\n                                                                                }}\r\n                                                                                    src=\"https://img.icons8.com/material-sharp/25/fa314a/stop.png\" />\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                }\r\n\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"createquizbtn\">\r\n                                            <button onClick={() => { setquizid(true); }}><img alt='' src=\"https://img.icons8.com/fluent/20/000000/plus-math.png\" /> Create Quiz</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"75vh\" }}>\r\n                                            <div className=\"w-100\" style={{ maxWidth: \"300px\" }}>\r\n\r\n                                                <Form>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Enter Quiz Title\"\r\n                                                            onChange={(e) => {\r\n                                                                setquizTitle(e.target.value); settitlecheck('notchecked');\r\n                                                                db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes').get().then((s) => {\r\n                                                                    s.forEach((doc) => {\r\n                                                                        if (doc.data().quiztitle === e.target.value) {\r\n                                                                            settitlecheck('titlefound')\r\n                                                                        }\r\n                                                                    });\r\n                                                                });\r\n                                                            }}\r\n                                                            required\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                    <Form.Group>\r\n                                                        {/* <Form.Control\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"Enter Duration Of Quiz In Minutes\"\r\n                                                    onChange={(e) => { setduration(e.target.value); setreset(false); }}\r\n                                                /> */}\r\n                                                    </Form.Group>\r\n                                                    <Button className=\"d-flex align-items-center justify-content-center\" style={{ marginLeft: \"100px\", borderRadius: \"25px\" }} onClick={() => {\r\n\r\n                                                        if (quizTitle !== '') {\r\n                                                            if (titlecheck === 'titlefound') {\r\n                                                                store.addNotification({\r\n                                                                    title: \"Error!\",\r\n                                                                    message: \"!! Title Already Used For Another Quiz\",\r\n                                                                    type: \"danger\",\r\n                                                                    container: \"top-right\",\r\n                                                                    insert: \"top\",\r\n                                                                    animationIn: [\"animated\", \"fadeIn\"],\r\n                                                                    animationOut: [\"animated\", \"fadeOut\"],\r\n                                                                    dismiss: {\r\n                                                                        duration: 3000,\r\n                                                                        showIcon: true\r\n                                                                    },\r\n                                                                    width: 280,\r\n                                                                })\r\n                                                            } else {\r\n                                                                setloader('addquestions')\r\n                                                                questionCard()\r\n                                                            }\r\n\r\n                                                        }\r\n                                                        else {\r\n                                                            store.addNotification({\r\n                                                                title: \"Error!\",\r\n                                                                message: \"!! Any field should not be empty\",\r\n                                                                type: \"danger\",\r\n                                                                container: \"top-right\",\r\n                                                                insert: \"top\",\r\n                                                                animationIn: [\"animated\", \"fadeIn\"],\r\n                                                                animationOut: [\"animated\", \"fadeOut\"],\r\n                                                                dismiss: {\r\n                                                                    duration: 3000,\r\n                                                                    showIcon: true\r\n                                                                },\r\n                                                                width: 280,\r\n                                                            })\r\n                                                        }\r\n                                                    }}>{(loader === 'addquestions') ? (<Loader type=\"Oval\" color=\"aqua\" height=\"25\" width=\"30\" />) : null} &nbsp; Add Questions</Button>\r\n                                                </Form>\r\n                                            </div>\r\n                                        </Container>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"110vh\" }}>\r\n\r\n                                    <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                                        <Form onSubmit={addQuestions} onLoad={() => {\r\n                                            setquestion(''); setoption1(''); setoption2(''); setoption3(''); setoption4('');\r\n                                            setchecked({ option1: false, option2: false, option3: false, option4: false })\r\n                                        }}>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Enter Question </Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Question\"\r\n                                                    onChange={(e) => { setquestion(e.target.value); setreset(false); }}\r\n                                                    required\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Option 1\"\r\n                                                    onChange={(e) => { setoption1(e.target.value); setreset(false); }}\r\n                                                    required\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Option 2\"\r\n                                                    onChange={(e) => { setoption2(e.target.value); setreset(false); }}\r\n                                                    required\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Option 3\"\r\n                                                    onChange={(e) => { setoption3(e.target.value); setreset(false); }}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Option 4\"\r\n                                                    onChange={(e) => { setoption4(e.target.value); setreset(false); }}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <div onLoad={() => { setchecked({ option1: false, option2: false, option3: false, option4: false }) }}>\r\n                                                Select Answers<br />\r\n                                                <input type=\"checkbox\" name=\"option1\" onChange={(e) => {\r\n                                                    setchecked({ ...checked, option1: (e.target.checked) });\r\n                                                    if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                    else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                }}\r\n\r\n                                                /> Option-1 &nbsp;\r\n                                            <input type=\"checkbox\" name=\"option2\" onChange={(e) => {\r\n                                                    setchecked({ ...checked, option2: (e.target.checked) })\r\n                                                        ; if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                    else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                }} /> Option-2 &nbsp;\r\n                                            <input type=\"checkbox\" name=\"option3\" onChange={(e) => {\r\n                                                    setchecked({ ...checked, option3: (e.target.checked) });\r\n                                                    if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                    else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                }}\r\n                                                /> Option-3 &nbsp;\r\n                                            <input type=\"checkbox\" name=\"option4\" onChange={(e) => {\r\n                                                    setchecked({ ...checked, option4: (e.target.checked) })\r\n                                                    if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                    else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                }}\r\n                                                /> Option-4\r\n                                            <br />\r\n                                            </div>\r\n                                            <br />\r\n                                            <Button\r\n                                                type={reset ? \"reset\" : null}\r\n\r\n                                                onClick={function () {\r\n                                                    if (question !== '' && option1 !== '' && option2 !== '' && option3 !== '' && option4 !== '') {\r\n                                                        if (checked.option1 === true || checked.option2 === true || checked.option3 === true || checked.option4 === true) {\r\n                                                            setreset(true);\r\n                                                            addQuestions();\r\n                                                        } else {\r\n                                                            store.addNotification({\r\n                                                                title: \"Error!\",\r\n                                                                message: \"Please Check the Correct Answer or Answers\",\r\n                                                                type: \"danger\",\r\n                                                                container: \"top-right\",\r\n                                                                insert: \"top\",\r\n                                                                animationIn: [\"animated\", \"fadeIn\"],\r\n                                                                animationOut: [\"animated\", \"fadeOut\"],\r\n                                                                dismiss: {\r\n                                                                    duration: 3000,\r\n                                                                    showIcon: true\r\n                                                                },\r\n                                                                width: 280,\r\n                                                            })\r\n                                                        }\r\n                                                    } else {\r\n                                                        store.addNotification({\r\n                                                            title: \"Error!\",\r\n                                                            message: \"!! Any field should not be empty\",\r\n                                                            type: \"danger\",\r\n                                                            container: \"top-right\",\r\n                                                            insert: \"top\",\r\n                                                            animationIn: [\"animated\", \"fadeIn\"],\r\n                                                            animationOut: [\"animated\", \"fadeOut\"],\r\n                                                            dismiss: {\r\n                                                                duration: 3000,\r\n                                                                showIcon: true\r\n                                                            },\r\n                                                            width: 280,\r\n                                                        })\r\n                                                    }\r\n                                                }} style={{ marginRight: \"20px\" }}>Add Question</Button><br></br><br></br>\r\n                                            <Button className=\"d-flex align-items-center justify-content-center\" onClick={() => {\r\n\r\n\r\n                                                if (question !== '' && option1 !== '' && option2 !== '' && option3 !== '' && option4 !== '') {\r\n                                                    if (checked.option1 === true || checked.option2 === true || checked.option3 === true || checked.option4 === true) {\r\n                                                        setreset(true);\r\n                                                        addQuestions();\r\n                                                        post();\r\n                                                    } else {\r\n                                                        store.addNotification({\r\n                                                            title: \"Error!\",\r\n                                                            message: \"Please Check the Correct Answer or Answers\",\r\n                                                            type: \"danger\",\r\n                                                            container: \"top-right\",\r\n                                                            insert: \"top\",\r\n                                                            animationIn: [\"animated\", \"fadeIn\"],\r\n                                                            animationOut: [\"animated\", \"fadeOut\"],\r\n                                                            dismiss: {\r\n                                                                duration: 3000,\r\n                                                                showIcon: true\r\n                                                            },\r\n                                                            width: 280,\r\n                                                        })\r\n                                                    }\r\n                                                } else {\r\n                                                    store.addNotification({\r\n                                                        title: \"Error!\",\r\n                                                        message: \"!! Any field should not be empty\",\r\n                                                        type: \"danger\",\r\n                                                        container: \"top-right\",\r\n                                                        insert: \"top\",\r\n                                                        animationIn: [\"animated\", \"fadeIn\"],\r\n                                                        animationOut: [\"animated\", \"fadeOut\"],\r\n                                                        dismiss: {\r\n                                                            duration: 3000,\r\n                                                            showIcon: true\r\n                                                        },\r\n                                                        width: 280,\r\n                                                    })\r\n                                                }\r\n\r\n                                            }}>{(loader === 'posting') ? (<Loader type=\"Oval\" color=\"aqua\" height=\"25\" width=\"30\" />) : null} &nbsp; Post Quiz</Button><br></br>\r\n                                            <Button className=\"d-flex align-items-center justify-content-center\" onClick={() => {\r\n                                                setloader('cancelposting');\r\n                                                db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes/' + quizId + '/questions').get().then((s) => {\r\n                                                    s.forEach((doc) => {\r\n                                                        db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes/' + quizId + '/questions').doc(doc.id).delete()\r\n                                                    });\r\n\r\n                                                });\r\n                                                db.collection('Admin/' + sessionStorage.getItem(\"adminnameid\") + '/quizes').doc(quizId).delete();\r\n                                                setTimeout(() => { window.location.reload(true) }, 1300);\r\n                                            }}>{(loader === 'cancelposting') ? (<Loader type=\"Oval\" color=\"aqua\" height=\"25\" width=\"30\" />) : null} &nbsp;Cancel Posting Quiz</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </Container>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <Container className=\"d-flex align-items-center justify-content-center\" style={{ marginTop: \"100px\" }}>\r\n                            <div className=\"questions\">\r\n                                <Button onClick={() => { setquizquestions(false) }}>Back</Button>\r\n\r\n                                {\r\n                                    quizlist.map((i, k) => {\r\n                                        if (i.question === \"Loading...\") {\r\n                                            return (\r\n                                                <div>\r\n                                                    Loading...\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n\r\n                                            return (\r\n\r\n                                                <div key={i, k}>\r\n                                                    <div className=\"question\" >\r\n                                                        <h6>{k + 1} . {i[0].question}\r\n                                                            <Popup trigger={<img src=\"https://img.icons8.com/fluent-systems-filled/20/000000/edit.png\" />} position=\"bottom\">\r\n                                                                <div>\r\n                                                                    <input id='a1' type=\"text\" onChange={e => { seth(e.target.value) }}></input>\r\n                                                                    <button onClick={() => {\r\n                                                                        document.getElementById('a1').value = '';\r\n                                                                        db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/quizes/' + i[1] + '/questions').doc(i[2]).update(\r\n                                                                            {\r\n                                                                                question: h\r\n                                                                            }\r\n                                                                        )\r\n                                                                        i[0].question = h;\r\n                                                                        ; seth('')\r\n                                                                    }}>update</button>\r\n                                                                </div>\r\n                                                            </Popup>\r\n\r\n                                                        </h6>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"option\">\r\n                                                        <h6>A . {i[0].option1}\r\n                                                            <Popup trigger={<img src=\"https://img.icons8.com/fluent-systems-filled/20/000000/edit.png\" />} position=\"bottom\">\r\n                                                                <div>\r\n                                                                    <input id='a2' type=\"text\" onChange={e => { seth(e.target.value) }}></input>\r\n                                                                    <button onClick={() => {\r\n                                                                        document.getElementById('a2').value = '';\r\n                                                                        db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/quizes/' + i[1] + '/questions').doc(i[2]).update(\r\n                                                                            {\r\n                                                                                option1: h\r\n                                                                            }\r\n                                                                        )\r\n                                                                        i[0].option1 = h;\r\n                                                                        ; seth('')\r\n                                                                    }}>update</button>\r\n                                                                </div>\r\n                                                            </Popup>\r\n                                                        </h6>\r\n                                                        <h6>B . {i[0].option2}\r\n                                                            <Popup trigger={<img src=\"https://img.icons8.com/fluent-systems-filled/20/000000/edit.png\" />} position=\"bottom\">\r\n                                                                <div>\r\n                                                                    <input id='a5' type=\"text\" onChange={e => { seth(e.target.value) }}></input>\r\n                                                                    <button onClick={() => {\r\n                                                                        document.getElementById('a5').value = '';\r\n                                                                        db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/quizes/' + i[1] + '/questions').doc(i[2]).update(\r\n                                                                            {\r\n                                                                                option2: h\r\n                                                                            }\r\n                                                                        )\r\n                                                                        i[0].option2 = h;\r\n                                                                        ; seth('')\r\n                                                                    }}>update</button>\r\n                                                                </div>\r\n                                                            </Popup>\r\n                                                        </h6>\r\n                                                        <h6>C . {i[0].option3}\r\n                                                            <Popup trigger={<img src=\"https://img.icons8.com/fluent-systems-filled/20/000000/edit.png\" />} position=\"bottom\">\r\n                                                                <div>\r\n                                                                    <input type=\"text\" onChange={e => { seth(e.target.value) }}></input>\r\n                                                                    <button onClick={() => {\r\n                                                                        document.getElementById('a3').value = '';\r\n                                                                        db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/quizes/' + i[1] + '/questions').doc(i[2]).update(\r\n                                                                            {\r\n                                                                                option3: h\r\n                                                                            }\r\n                                                                        )\r\n                                                                        i[0].option3 = h;\r\n                                                                        ; seth('')\r\n                                                                    }}>update</button>\r\n                                                                </div>\r\n                                                            </Popup>\r\n                                                        </h6>\r\n                                                        <h6>D . {i[0].option4}\r\n                                                            <Popup trigger={<img src=\"https://img.icons8.com/fluent-systems-filled/20/000000/edit.png\" />} position=\"bottom\">\r\n                                                                <div>\r\n                                                                    <input id=\"a4\" type=\"text\" onChange={e => { seth(e.target.value) }}></input>\r\n                                                                    <button onClick={() => {\r\n                                                                        document.getElementById('a4').value = '';\r\n                                                                        db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/quizes/' + i[1] + '/questions').doc(i[2]).update(\r\n                                                                            {\r\n                                                                                option4: h\r\n                                                                            }\r\n                                                                        )\r\n                                                                        i[0].option4 = h;\r\n                                                                        ; seth('')\r\n                                                                    }}>update</button>\r\n                                                                </div>\r\n                                                            </Popup>\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <h6 className=\"answer\">{k + 1} Answer:&nbsp;\r\n                                                {(i[0].correctanswer.option1) ?\r\n                                                            (i[0].option1) + \" \"\r\n                                                            : null}\r\n                                                        {(i[0].correctanswer.option2) ?\r\n                                                            (i[0].option2) + \" \"\r\n                                                            : null}\r\n                                                        {(i[0].correctanswer.option3) ?\r\n                                                            (i[0].option3) + \" \"\r\n                                                            : null}\r\n                                                        {(i[0].correctanswer.option4) ?\r\n                                                            (i[0].option4) + \" \"\r\n                                                            : null\r\n                                                        }\r\n                                                        <Popup trigger={<img src=\"https://img.icons8.com/fluent-systems-filled/20/000000/edit.png\" />} position=\"bottom\">\r\n                                                            <div>\r\n                                                                <div onLoad={() => { setoption({ option1: false, option2: false, option3: false, option4: false }) }}>\r\n                                                                    Select Answers<br />\r\n                                                                    <input id=\"h1\" type=\"checkbox\" name=\"option1\" onChange={(e) => {\r\n                                                                        setoption({ ...option, option1: (e.target.checked) });\r\n                                                                        if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                                        else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                                    }}\r\n\r\n                                                                    /> Option-1 &nbsp;\r\n                                                                     <input id=\"h2\" type=\"checkbox\" name=\"option2\" onChange={(e) => {\r\n                                                                        setoption({ ...option, option2: (e.target.checked) })\r\n                                                                            ; if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                                        else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                                    }} /> Option-2 &nbsp;\r\n                                                                     <input id=\"h3\" type=\"checkbox\" name=\"option3\" onChange={(e) => {\r\n                                                                        setoption({ ...option, option3: (e.target.checked) });\r\n                                                                        if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                                        else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                                    }}\r\n                                                                    /> Option-3 &nbsp;\r\n                                                                    <input id=\"h4\" type=\"checkbox\" name=\"option4\" onChange={(e) => {\r\n                                                                        setoption({ ...option, option4: (e.target.checked) })\r\n                                                                        if (e.target.checked) { setnoofanswers(noofanswers + 1) }\r\n                                                                        else { setnoofanswers(((noofanswers === 0) ? 0 : (noofanswers - 1))) }\r\n                                                                    }}\r\n                                                                    /> Option-4\r\n                                                                      </div>\r\n                                                                <Button onClick={() => {\r\n                                                                    document.getElementById('h1').checked = false;\r\n                                                                    document.getElementById('h2').checked = false;\r\n                                                                    document.getElementById('h3').checked = false;\r\n                                                                    document.getElementById('h4').checked = false;\r\n                                                                    db.collection('Admin/' + sessionStorage.getItem('adminnameid') + '/quizes/' + i[1] + '/questions').doc(i[2]).update(\r\n                                                                        {\r\n                                                                            correctanswer: option,\r\n                                                                            noofanswers: noofanswers\r\n                                                                        }\r\n                                                                    )\r\n                                                                    i[0].correctanswer = option;\r\n                                                                    ; setoption({ option1: false, option2: false, option3: false, option4: false });\r\n                                                                    setnoofanswers(0)\r\n                                                                }} type=\"reset\">update</Button>\r\n                                                            </div>\r\n                                                        </Popup>\r\n                                                    </h6>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\bestenlist\\React js Project\\leaderboard\\src\\components\\User\\ProgressBar.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":67,"column":6,"nodeType":"98","endLine":67,"endColumn":13,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":91,"column":6,"nodeType":"98","endLine":91,"endColumn":13,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":115,"column":6,"nodeType":"98","endLine":115,"endColumn":13,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":169,"column":56,"nodeType":"106","messageId":"107","endLine":169,"endColumn":57},{"ruleId":"108","severity":1,"message":"109","line":398,"column":23,"nodeType":"110","endLine":398,"endColumn":98},{"ruleId":"108","severity":1,"message":"109","line":399,"column":23,"nodeType":"110","endLine":399,"endColumn":126},{"ruleId":"108","severity":1,"message":"109","line":400,"column":23,"nodeType":"110","endLine":400,"endColumn":98},{"ruleId":"108","severity":1,"message":"109","line":412,"column":33,"nodeType":"110","endLine":413,"endColumn":104},{"ruleId":"108","severity":1,"message":"109","line":416,"column":33,"nodeType":"110","endLine":416,"endColumn":103},{"ruleId":"108","severity":1,"message":"109","line":434,"column":35,"nodeType":"110","endLine":435,"endColumn":106},{"ruleId":"108","severity":1,"message":"109","line":438,"column":35,"nodeType":"110","endLine":438,"endColumn":105},{"ruleId":"108","severity":1,"message":"109","line":453,"column":43,"nodeType":"110","endLine":454,"endColumn":114},{"ruleId":"108","severity":1,"message":"109","line":457,"column":43,"nodeType":"110","endLine":457,"endColumn":113},{"ruleId":"92","severity":1,"message":"93","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":96,"column":52,"nodeType":"106","messageId":"107","endLine":96,"endColumn":53},{"ruleId":"108","severity":1,"message":"109","line":101,"column":29,"nodeType":"110","endLine":120,"endColumn":95},{"ruleId":"111","severity":1,"message":"112","line":151,"column":43,"nodeType":"113","messageId":"114","endLine":151,"endColumn":45},{"ruleId":"108","severity":1,"message":"109","line":233,"column":31,"nodeType":"110","endLine":248,"endColumn":102},{"ruleId":"111","severity":1,"message":"112","line":237,"column":56,"nodeType":"113","messageId":"114","endLine":237,"endColumn":58},{"ruleId":"108","severity":1,"message":"109","line":262,"column":13,"nodeType":"110","endLine":273,"endColumn":70},{"ruleId":"108","severity":1,"message":"109","line":274,"column":7,"nodeType":"110","endLine":278,"endColumn":67},{"ruleId":"108","severity":1,"message":"109","line":283,"column":31,"nodeType":"110","endLine":283,"endColumn":102},{"ruleId":"92","severity":1,"message":"115","line":20,"column":12,"nodeType":"94","messageId":"95","endLine":20,"endColumn":15},{"ruleId":"92","severity":1,"message":"116","line":20,"column":17,"nodeType":"94","messageId":"95","endLine":20,"endColumn":23},{"ruleId":"92","severity":1,"message":"117","line":23,"column":12,"nodeType":"94","messageId":"95","endLine":23,"endColumn":19},{"ruleId":"92","severity":1,"message":"118","line":23,"column":21,"nodeType":"94","messageId":"95","endLine":23,"endColumn":31},{"ruleId":"92","severity":1,"message":"115","line":47,"column":25,"nodeType":"94","messageId":"95","endLine":47,"endColumn":28},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"119","line":101,"column":14,"nodeType":"94","messageId":"95","endLine":101,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":138,"column":90,"nodeType":"106","messageId":"107","endLine":138,"endColumn":91},{"ruleId":"108","severity":1,"message":"109","line":169,"column":81,"nodeType":"110","endLine":179,"endColumn":157},{"ruleId":"108","severity":1,"message":"109","line":180,"column":83,"nodeType":"110","endLine":188,"endColumn":150},{"ruleId":"104","severity":1,"message":"105","line":477,"column":60,"nodeType":"106","messageId":"107","endLine":477,"endColumn":61},{"ruleId":"108","severity":1,"message":"109","line":480,"column":77,"nodeType":"110","endLine":480,"endColumn":154},{"ruleId":"108","severity":1,"message":"109","line":501,"column":77,"nodeType":"110","endLine":501,"endColumn":154},{"ruleId":"108","severity":1,"message":"109","line":518,"column":77,"nodeType":"110","endLine":518,"endColumn":154},{"ruleId":"108","severity":1,"message":"109","line":535,"column":77,"nodeType":"110","endLine":535,"endColumn":154},{"ruleId":"108","severity":1,"message":"109","line":552,"column":77,"nodeType":"110","endLine":552,"endColumn":154},{"ruleId":"108","severity":1,"message":"109","line":583,"column":73,"nodeType":"110","endLine":583,"endColumn":150},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'quizid.quizid', 'quizid.quiztitle', and 'quizquestions.length'. Either include them or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'h', 'quizid.quizid', 'quizid.quiztitle', and 'quizquestions.length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProgress' needs the current value of 'quizquestions.length'.",["123"],"React Hook useEffect has missing dependencies: 'quizid.quizid' and 'result1'. Either include them or remove the dependency array.",["124"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'abc' is assigned a value but never used.","'setabc' is assigned a value but never used.","'dbcheck' is assigned a value but never used.","'setdbcheck' is assigned a value but never used.","'hello' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [quizid.quizid, quizid.quiztitle, quizquestions.length, score]",{"range":"131","text":"132"},"Update the dependencies array to be: [h, quizid.quizid, quizid.quiztitle, quizquestions.length, score]",{"range":"133","text":"134"},"Update the dependencies array to be: [quizid.quizid, result1, score]",{"range":"135","text":"136"},[2802,2809],"[quizid.quizid, quizid.quiztitle, quizquestions.length, score]",[3606,3613],"[h, quizid.quizid, quizid.quiztitle, quizquestions.length, score]",[4428,4435],"[quizid.quizid, result1, score]"]